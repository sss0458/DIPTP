<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.TeachTaskTestMapper">
    
    <resultMap type="org.example.domain.TeachTaskTest" id="TeachTaskTestResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="title"    column="title"    />
        <result property="dataType"    column="data_type"    />
        <result property="describe"    column="describe"    />
        <result property="theory"    column="theory"    />
        <result property="algorithmId"    column="algorithm_id"    />
        <result property="caseId"    column="case_id"    />
        <result property="ruleId"    column="rule_id"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <resultMap id="TeachTaskTestTeachTaskTestDataManageResult" type="org.example.domain.TeachTaskTest" extends="TeachTaskTestResult">
        <collection property="teachTaskTestDataManageList" ofType="org.example.domain.TeachTaskTestDataManage" column="id" select="selectTeachTaskTestDataManageList" />
    </resultMap>

    <resultMap type="org.example.domain.TeachTaskTestDataManage" id="TeachTaskTestDataManageResult">
        <result property="id"    column="id"    />
        <result property="taskId"    column="task_id"    />
        <result property="taskTestId"    column="task_test_id"    />
        <result property="dataManageId"    column="data_manage_id"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="teacherId"    column="teacher_id"    />
    </resultMap>

    <sql id="selectTeachTaskTestVo">
        select id, task_id, title, data_type, `describe`, theory, algorithm_id, case_id, rule_id, status, remark, del_flag from teach_task_test
    </sql>


    <select id="selectTeachTaskTestList" parameterType="org.example.domain.TeachTaskTest" resultMap="TeachTaskTestResult">
        <include refid="selectTeachTaskTestVo"/>
        <where>
            <if test="taskId != null "> and task_id = #{taskId}</if>
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="dataType != null  and dataType != ''"> and data_type = #{dataType}</if>
            <if test="describe != null  and describe != ''"> and `describe` = #{describe}</if>
            <if test="theory != null  and theory != ''"> and theory = #{theory}</if>
            <if test="algorithmId != null "> and algorithm_id = #{algorithmId}</if>
            <if test="caseId != null "> and case_id = #{caseId}</if>
            <if test="ruleId != null "> and rule_id = #{ruleId}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            and del_flag = '0'
        </where>
    </select>


    <select id="selectTeachTaskTestById" parameterType="Long" resultMap="TeachTaskTestTeachTaskTestDataManageResult">
        select id, task_id, title, data_type, `describe`, theory, algorithm_id, case_id, rule_id, status, remark, del_flag
        from teach_task_test
        where id = #{id} and del_flag = '0'
    </select>

    <select id="selectTeachTaskTestDataManageList" resultMap="TeachTaskTestDataManageResult">
        select id, task_id, task_test_id, data_manage_id, status, remark, del_flag, teacher_id
        from teach_task_test_data_manage
        where task_test_id = #{task_test_id}
    </select>
    <select id="selectTeachTaskTestListByTaskId" resultType="org.example.domain.TeachTaskTest">
        select
        id,
        task_id AS "taskId",
        title,
        data_type AS "dataType",
        `describe`,
        theory,
        algorithm_id AS "algorithmId",
        case_id AS "caseId",
        rule_id AS "ruleId",
        status,
        remark,
        del_flag AS "delFlag"
        from teach_task_test
        where task_id = #{taskId} and del_flag = '0'
    </select>
    <select id="selectTestIdByTaskId" resultType="java.lang.Long">
        select id from teach_task_test where task_id = #{id}
    </select>

    <insert id="insertTeachTaskTest" parameterType="org.example.domain.TeachTaskTest" useGeneratedKeys="true" keyProperty="id">
        insert into teach_task_test
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskId != null">task_id,</if>
            <if test="title != null">title,</if>
            <if test="dataType != null">data_type,</if>
            <if test="describe != null">`describe`,</if>
            <if test="theory != null">theory,</if>
            <if test="algorithmId != null">algorithm_id,</if>
            <if test="caseId != null">case_id,</if>
            <if test="ruleId != null">rule_id,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="delFlag != null">del_flag,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskId != null">#{taskId},</if>
            <if test="title != null">#{title},</if>
            <if test="dataType != null">#{dataType},</if>
            <if test="describe != null">#{describe},</if>
            <if test="theory != null">#{theory},</if>
            <if test="algorithmId != null">#{algorithmId},</if>
            <if test="caseId != null">#{caseId},</if>
            <if test="ruleId != null">#{ruleId},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="delFlag != null">#{delFlag},</if>
         </trim>
    </insert>

    <update id="updateTeachTaskTest" parameterType="org.example.domain.TeachTaskTest">
        update teach_task_test
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskId != null">task_id = #{taskId},</if>
            <if test="title != null">title = #{title},</if>
            <if test="dataType != null">data_type = #{dataType},</if>
            <if test="describe != null">`describe` = #{describe},</if>
            <if test="theory != null">theory = #{theory},</if>
            <if test="algorithmId != null">algorithm_id = #{algorithmId},</if>
            <if test="caseId != null">case_id = #{caseId},</if>
            <if test="ruleId != null">rule_id = #{ruleId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="deleteTeachTaskTestById" parameterType="Long">
        update teach_task_test
        set del_flag = '1'
        where id = #{id}
    </update>

    <update id="deleteTeachTaskTestByIds" parameterType="String">
        update teach_task_test
        set del_flag = '1'
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteTeachTaskTestDataManageByTaskTestIds" parameterType="String">
        update teach_task_test_data_manage
        set del_flag = '1'
        where task_test_id in
        <foreach item="taskTestId" collection="array" open="(" separator="," close=")">
            #{taskTestId}
        </foreach>
    </update>

    <update id="deleteTeachTaskTestDataManageByTaskTestId" parameterType="Long">
        update teach_task_test_data_manage
        set del_flag = '1'
        where task_test_id = #{taskTestId}
    </update>

    <insert id="batchTeachTaskTestDataManage">
        insert into teach_task_test_data_manage(task_id, task_test_id, data_manage_id, status, remark, del_flag, teacher_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            (#{item.taskId}, #{item.taskTestId}, #{item.dataManageId}, #{item.status}, #{item.remark}, #{item.delFlag}, #{item.teacherId})
        </foreach>
    </insert>
</mapper>