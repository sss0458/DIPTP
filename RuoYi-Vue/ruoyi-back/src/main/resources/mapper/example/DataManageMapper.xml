<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.DataManageMapper">

    <resultMap type="org.example.domain.DataManage" id="DataManageResult">
        <result property="id"    column="id"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="sign"    column="sign"    />
        <result property="source"    column="source"    />
        <result property="dataType"    column="data_type"    />
        <result property="sceneType"    column="scene_type"    />
        <result property="targetType"    column="target_type"    />
        <result property="imagingType"    column="imaging_type"    />
        <result property="algorithmId"    column="algorithm_id"    />
        <result property="filePath"    column="file_path"    />
    </resultMap>

    <resultMap type="org.example.domain.vo.DataManageVo" id="DataManageVoResult">
        <id property="id" column="dm_id"/>
        <result property="delFlag" column="dm_del_flag"/>
        <result property="status" column="dm_status"/>
        <result property="remark" column="dm_remark"/>
        <result property="sign" column="dm_sign"/>
        <result property="source" column="dm_source"/>
        <result property="dataType" column="dm_data_type"/>
        <result property="sceneType" column="dm_scene_type"/>
        <result property="targetType" column="dm_target_type"/>
        <result property="imagingType" column="dm_imaging_type"/>
        <result property="algorithmId" column="dm_algorithm_id"/>
        <result property="filePath" column="dm_file_path"/>
        <result property="algorithmRemark" column="dm_algorithm_remark"/>

        <collection property="extendMetadata" ofType="org.example.domain.vo.DataManageExtendVo"
                    select="com.ruoyi.system.mapper.DataManageExtendMapper.selectDataManageExtendVoListByDataManageId"
                    column="dm_id"/>
    </resultMap>

    <resultMap type="org.example.domain.DataManageExtend" id="DataManageExtendResult">
        <result property="id"    column="id"    />
        <result property="dataManageId"    column="data_manage_id"    />
        <result property="metaDataId"    column="meta_data_id"    />
        <result property="content"    column="content"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <resultMap id="DataManageDataManageExtendResult" type="org.example.domain.DataManage" extends="DataManageResult">
        <collection property="dataManageExtendList" ofType="org.example.domain.DataManageExtend" column="id" select="org.example.mapper.DataManageExtendMapper.selectDataManageExtendList" />
    </resultMap>


    <sql id="selectDataManageColumns">
        select id, del_flag, status, remark, sign, source, data_type, scene_type, target_type, imaging_type, algorithm_id, file_path
        from data_manage
    </sql>

    <sql id="selectDataManageVoJoin">
        SELECT
        dm.id as dm_id, dm.del_flag as dm_del_flag, dm.status as dm_status, dm.remark as dm_remark,
        dm.sign as dm_sign, dm.source as dm_source, dm.data_type as dm_data_type,
        dm.scene_type as dm_scene_type, dm.target_type as dm_target_type,
        dm.imaging_type as dm_imaging_type, dm.algorithm_id as dm_algorithm_id, dm.file_path as dm_file_path,
        a.remark as dm_algorithm_remark
        FROM data_manage dm
        LEFT JOIN algorithm a ON dm.algorithm_id = a.id
        WHERE dm.del_flag = '0'
    </sql>

    <select id="selectDataManageList" parameterType="org.example.domain.DataManage" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        <where>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="sign != null  and sign != ''"> and sign = #{sign}</if>
            <if test="source != null  and source != ''"> and source = #{source}</if>
            <if test="dataType != null  and dataType != ''"> and data_type = #{dataType}</if>
            <if test="sceneType != null  and sceneType != ''"> and scene_type = #{sceneType}</if>
            <if test="targetType != null  and targetType != ''"> and target_type = #{targetType}</if>
            <if test="imagingType != null  and imaging_type != ''"> and imaging_type = #{imagingType}</if>
            <if test="algorithmId != null "> and algorithm_id = #{algorithmId}</if>
            <if test="filePath != null  and filePath != ''"> and file_path = #{filePath}</if>
            and del_flag = '0'
        </where>
    </select>

    <select id="selectDataManageById" parameterType="Long" resultMap="DataManageDataManageExtendResult">
        <include refid="selectDataManageColumns"/>
        where id = #{id} AND del_flag = '0'
    </select>

    <select id="selectDataManageExtendList" resultMap="DataManageExtendResult">
        select id, data_manage_id, meta_data_id, content, del_flag, status, remark
        from data_manage_extend
        where data_manage_id = #{dataManageId} AND del_flag = '0'
    </select>

    <insert id="insertDataManage" parameterType="org.example.domain.DataManage" useGeneratedKeys="true" keyProperty="id">
        insert into data_manage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            del_flag,
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="sign != null">sign,</if>
            <if test="source != null">source,</if>
            <if test="dataType != null">data_type,</if>
            <if test="sceneType != null">scene_type,</if>
            <if test="targetType != null">target_type,</if>
            <if test="imagingType != null">imaging_type,</if>
            <if test="algorithmId != null">algorithm_id,</if>
            <if test="filePath != null">file_path,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            '0',
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="sign != null">#{sign},</if>
            <if test="source != null">#{source},</if>
            <if test="dataType != null">#{dataType},</if>
            <if test="sceneType != null">#{sceneType},</if>
            <if test="targetType != null">#{targetType},</if>
            <if test="imagingType != null">#{imagingType},</if>
            <if test="algorithmId != null">#{algorithmId},</if>
            <if test="filePath != null">#{filePath},</if>
        </trim>
    </insert>

    <update id="updateDataManage" parameterType="org.example.domain.DataManage">
        update data_manage
        <trim prefix="SET" suffixOverrides=",">
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="sign != null">sign = #{sign},</if>
            <if test="source != null">source = #{source},</if>
            <if test="dataType != null">data_type = #{dataType},</if>
            <if test="sceneType != null">scene_type = #{sceneType},</if>
            <if test="targetType != null">target_type = #{targetType},</if>
            <if test="imagingType != null">imaging_type = #{imagingType},</if>
            <if test="algorithmId != null">algorithm_id = #{algorithmId},</if>
            <if test="filePath != null">file_path = #{filePath},</if>
        </trim>
        where id = #{id}
    </update>

    <update id="deleteDataManageById" parameterType="Long">
        update data_manage set del_flag = '1', update_time = sysdate()
        <if test="updateBy != null">, update_by = #{updateBy}</if>
        where id = #{id}
    </update>

    <update id="deleteDataManageByIds" parameterType="java.util.Collection">
        update data_manage set del_flag = '1', update_time = sysdate()
        <if test="updateBy != null">, update_by = #{updateBy}</if>
        where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="deleteDataManageExtendByDataManageIds" parameterType="java.util.Collection">
        update data_manage_extend set del_flag = '1', update_time = sysdate()
        <if test="updateBy != null">, update_by = #{updateBy}</if>
        where data_manage_id in
        <foreach item="dataManageId" collection="array" open="(" separator="," close=")">
            #{dataManageId}
        </foreach>
    </update>

    <update id="deleteDataManageExtendByDataManageId" parameterType="Long">
        update data_manage_extend set del_flag = '1', update_time = sysdate()
        <if test="updateBy != null">, update_by = #{updateBy}</if>
        where data_manage_id = #{dataManageId}
    </update>

    <insert id="batchDataManageExtend" parameterType="java.util.List">
        insert into data_manage_extend( data_manage_id, meta_data_id, content, del_flag, status, remark) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.dataManageId}, #{item.metaDataId}, #{item.content}, '0', #{item.status}, #{item.remark})
        </foreach>
    </insert>

    <select id="selectRandomImageId" resultType="java.lang.Long">
        SELECT id
        FROM data_manage
        WHERE data_type = #{dataType} AND status = '0' AND del_flag = '0' ORDER BY RAND()
        LIMIT 1
    </select>

    <select id="selectDataManageVoById" parameterType="Long" resultMap="DataManageVoResult">
        <include refid="selectDataManageVoJoin"/>
        AND dm.id = #{id}
    </select>

    <select id="selectDataManageVoList" parameterType="org.example.domain.DataManage" resultMap="DataManageVoResult">
        <include refid="selectDataManageVoJoin"/>
        <where>
            <if test="status != null  and status != ''"> and dm.status = #{status}</if>
            <if test="sign != null  and sign != ''"> and dm.sign like concat('%', #{sign}, '%')</if>
            <if test="source != null  and source != ''"> and dm.source = #{source}</if>
            <if test="dataType != null  and dataType != ''"> and dm.data_type = #{dataType}</if>
            <if test="sceneType != null  and scene_type != ''"> and dm.scene_type = #{sceneType}</if>
            <if test="targetType != null  and target_type != ''"> and dm.target_type = #{targetType}</if>
            <if test="imagingType != null  and imaging_type != ''"> and dm.imaging_type = #{imagingType}</if>
            <if test="algorithmId != null "> and dm.algorithm_id = #{algorithmId}</if>
            <if test="filePath != null  and filePath != ''"> and dm.file_path = #{filePath}</if>
        </where>
    </select>

    <update id="updateDataManageDelFlagByIds" parameterType="java.util.Collection">
        update data_manage set del_flag = '1' , update_time = sysdate()
        <if test="updateBy != null">, update_by = #{updateBy}</if>
        where id in
        <foreach item="id" collection="ids" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="selectBasicDataManageById" parameterType="Long" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        where id = #{id} AND del_flag = '0'
    </select>

    <select id="selectDataManageListByDataType" parameterType="String" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        where data_type = #{dataType} AND del_flag = '0'
    </select>

    <select id="selectDataManageByFilePath" parameterType="String" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        where file_path = #{filePath} AND del_flag = '0' LIMIT 1
    </select>

    <select id="selectDataManageListBySignLike" parameterType="String" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        <where>
            <if test="sign != null and sign != ''">
                and sign like concat('%', #{sign}, '%')
            </if>
            AND del_flag = '0'
        </where>
    </select>

    <select id="selectDataManageCountBySceneType" parameterType="String" resultType="int">
        select count(1) from data_manage
        where scene_type = #{sceneType} AND del_flag = '0'
    </select>

    <select id="selectDataManageListByStatus" parameterType="String" resultMap="DataManageResult">
        <include refid="selectDataManageColumns"/>
        where status = #{status} AND del_flag = '0'
    </select>

    <select id="selectAllActiveDataManageIds" resultType="Long">
        select id from data_manage where del_flag = '0'
    </select>

    <select id="selectDataManageCount" parameterType="org.example.domain.DataManage" resultType="int">
        select count(1) from data_manage
        <where>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="sign != null  and sign != ''"> and sign = #{sign}</if>
            <if test="source != null  and source != ''"> and source = #{source}</if>
            <if test="dataType != null  and dataType != ''"> and data_type = #{dataType}</if>
            <if test="sceneType != null  and scene_type != ''"> and scene_type = #{sceneType}</if>
            <if test="targetType != null  and target_type != ''"> and target_type = #{targetType}</if>
            <if test="imagingType != null  and imaging_type != ''"> and imaging_type = #{imagingType}</if>
            <if test="algorithmId != null "> and algorithm_id = #{algorithmId}</if>
            <if test="filePath != null  and filePath != ''"> and file_path = #{filePath}</if>
            AND del_flag = '0'
        </where>
    </select>

</mapper>