<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.mapper.ScoreRuleMapper">

    <resultMap type="org.example.domain.ScoreRule" id="ScoreRuleResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="describe"    column="describe"    />
        <result property="status"    column="status"    />
        <result property="remark"    column="remark"    />
        <result property="delFlag"    column="del_flag"    />
    </resultMap>

    <sql id="selectScoreRuleVo">
        select id, name, `describe`, status, remark, del_flag from score_rule
    </sql>

    <select id="selectScoreRuleList" parameterType="org.example.domain.ScoreRule" resultMap="ScoreRuleResult">
        <include refid="selectScoreRuleVo"/>
        <where>
            del_flag='0'
            <if test="name != null  and name != ''"> and `name` like concat('%', #{name}, '%')</if>
            <if test="describe != null  and describe != ''"> and `describe` = #{describe}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>

    <select id="selectScoreRuleById" parameterType="Long" resultMap="ScoreRuleResult">
        <include refid="selectScoreRuleVo"/>
        where id = #{id} and del_flag='0'
    </select>

    <insert id="insertScoreRule" parameterType="org.example.domain.ScoreRule" useGeneratedKeys="true" keyProperty="id">
        insert into score_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">`name`,</if>
            <if test="describe != null">`describe`,</if>
            <if test="status != null">status,</if>
            <if test="remark != null">remark,</if>
            <if test="delFlag != null">del_flag,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="describe != null">#{describe},</if>
            <if test="status != null">#{status},</if>
            <if test="remark != null">#{remark},</if>
            <if test="delFlag != null">#{delFlag},</if>
        </trim>
    </insert>

    <update id="updateScoreRule" parameterType="org.example.domain.ScoreRule">
        update score_rule
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="describe != null">`describe` = #{describe},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteScoreRuleById" parameterType="Long">
        update score_rule set del_flag='1' where id = #{id}
    </delete>

    <delete id="deleteScoreRuleByIds" parameterType="String">
        update score_rule set del_flag='1' where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>